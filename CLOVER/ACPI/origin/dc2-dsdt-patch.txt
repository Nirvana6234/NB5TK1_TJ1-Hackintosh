#B1B2 B1B4 functions
into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;
into method label B1B4 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B4, 4, NotSerialized)\n
{\n
    Store(Arg3, Local0)\n
    Or(Arg2, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg1, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg0, ShiftLeft(Local0, 8), Local0)\n
    Return(Local0)\n
}\n
end;

###########  battery patch
#######     32-bit EC
#OEM3
into device label EC code_regex OEM3,\s+16 replace_matched begin OE30,8,OE31,8 end;
into method label _Q35 code_regex \(OEM3, replace_matched begin (B1B2(OE30,OE31), end;
into method label _Q37 code_regex \(OEM3, replace_matched begin (B1B2(OE30,OE31), end;
into method label GCMD code_regex \(\^\^PCI0.LPCB.EC.OEM3, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC.OE30,^^PCI0.LPCB.EC.OE31), end;
into method label CPKG code_regex \(\^\^PCI0.LPCB.EC.OEM3, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC.OE30,^^PCI0.LPCB.EC.OE31), end;

#RPM1
#RPM2
#RPM3
into device label EC code_regex RPM1,\s+16 replace_matched begin RP11,8,RP12,8 end;
into method label PNVT code_regex \(\^\^PCI0.LPCB.EC.RPM1, replace_matched begin (B1B2(^^PCI0.LPCB.EC.RP11,^^PCI0.LPCB.EC.RP12), end;

into device label EC code_regex RPM2,\s+16 replace_matched begin RP21,8,RP22,8 end;
into method label PNVT code_regex \(\^\^PCI0.LPCB.EC.RPM2, replace_matched begin (B1B2(^^PCI0.LPCB.EC.RP21,^^PCI0.LPCB.EC.RP22), end;

into device label EC code_regex RPM3,\s+16 replace_matched begin RP31,8,RP32,8 end;
into method label PNVT code_regex \(\^\^PCI0.LPCB.EC.RPM3, replace_matched begin (B1B2(^^PCI0.LPCB.EC.RP31,^^PCI0.LPCB.EC.RP32), end;

#######    32-bit EC
#BDC0
into device label EC code_regex BDC0,\s+32 replace_matched begin DC00,8,DC01,8,DC02,8,DC03,8 end;
into method label UPBI code_regex \(\^\^PCI0.LPCB.EC.BDC0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.DC00,^^PCI0.LPCB.EC.DC01,^^PCI0.LPCB.EC.DC02,^^PCI0.LPCB.EC.DC03), end;
into method label GCMD code_regex \(\^\^PCI0.LPCB.EC.BDC0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.DC00,^^PCI0.LPCB.EC.DC01,^^PCI0.LPCB.EC.DC02,^^PCI0.LPCB.EC.DC03), end;
into method label CPKG code_regex \(\^\^PCI0.LPCB.EC.BDC0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.DC00,^^PCI0.LPCB.EC.DC01,^^PCI0.LPCB.EC.DC02,^^PCI0.LPCB.EC.DC03), end;

#BFC0
into device label EC code_regex BFC0,\s+32 replace_matched begin FC00,8,FC01,8,FC02,8,FC03,8 end;
into method label UPBI code_regex \(\^\^PCI0.LPCB.EC.BFC0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.FC00,^^PCI0.LPCB.EC.FC01,^^PCI0.LPCB.EC.FC02,^^PCI0.LPCB.EC.FC03), end;
into method label UPBS code_regex \^\^PCI0.LPCB.EC.BFC0 replaceall_matched begin B1B4(^^PCI0.LPCB.EC.FC00,^^PCI0.LPCB.EC.FC01,^^PCI0.LPCB.EC.FC02,^^PCI0.LPCB.EC.FC03) end;

#BDV0
into device label EC code_regex BDV0,\s+32 replace_matched begin DV00,8,DV01,8,DV02,8,DV03,8 end;
into method label UPBI code_regex \(\^\^PCI0.LPCB.EC.BDV0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.DV00,^^PCI0.LPCB.EC.DV01,^^PCI0.LPCB.EC.DV02,^^PCI0.LPCB.EC.DV03), end;

#BST0
into device label EC code_regex BST0,\s+32 replace_matched begin ST00,8,ST01,8,ST02,8,ST03,8 end;
into method label UPBS code_regex \(\^\^PCI0.LPCB.EC.BST0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.ST00,^^PCI0.LPCB.EC.ST01,^^PCI0.LPCB.EC.ST02,^^PCI0.LPCB.EC.ST03), end;

#BPR0
into device label EC code_regex BPR0,\s+32 replace_matched begin PR00,8,PR01,8,PR02,8,PR03,8 end;
into method label UPBS code_regex \(\^\^PCI0.LPCB.EC.BPR0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.PR00,^^PCI0.LPCB.EC.PR01,^^PCI0.LPCB.EC.PR02,^^PCI0.LPCB.EC.PR03), end;
into method label PNVT code_regex \(\^\^PCI0.LPCB.EC.BPR0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.PR00,^^PCI0.LPCB.EC.PR01,^^PCI0.LPCB.EC.PR02,^^PCI0.LPCB.EC.PR03), end;

#BRC0
into device label EC code_regex BRC0,\s+32 replace_matched begin RC00,8,RC01,8,RC02,8,RC03,8 end;
into method label UPBS code_regex \(\^\^PCI0.LPCB.EC.BRC0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.RC00,^^PCI0.LPCB.EC.RC01,^^PCI0.LPCB.EC.RC02,^^PCI0.LPCB.EC.RC03), end;

#BPV0
into device label EC code_regex BPV0,\s+32 replace_matched begin PV00,8,PV01,8,PV02,8,PV03,8 end;
into method label UPBS code_regex \(\^\^PCI0.LPCB.EC.BPV0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.PV00,^^PCI0.LPCB.EC.PV01,^^PCI0.LPCB.EC.PV02,^^PCI0.LPCB.EC.PV03), end;
into method label PNVT code_regex \(\^\^PCI0.LPCB.EC.BPV0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.PV00,^^PCI0.LPCB.EC.PV01,^^PCI0.LPCB.EC.PV02,^^PCI0.LPCB.EC.PV03), end;

#BCW0
into device label EC code_regex BCW0,\s+32 replace_matched begin CW00,8,CW01,8,CW02,8,CW03,8 end;
into method label UPBI code_regex \(\^\^PCI0.LPCB.EC.BCW0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.CW00,^^PCI0.LPCB.EC.CW01,^^PCI0.LPCB.EC.CW02,^^PCI0.LPCB.EC.CW03), end;

#BCL0
into device label EC code_regex BCL0,\s+32 replace_matched begin CL00,8,CL01,8,CL02,8,CL03,8 end;
into method label UPBI code_regex \(\^\^PCI0.LPCB.EC.BCL0, replaceall_matched begin (B1B4(^^PCI0.LPCB.EC.CL00,^^PCI0.LPCB.EC.CL01,^^PCI0.LPCB.EC.CL02,^^PCI0.LPCB.EC.CL03), end;



#Fans control
#Scope  : _SB.PCI0.LPCB
#See:https://github.com/datasone/ClevoControl

into all code_regex Field\s\(EC81,\sByteAcc,\sLock,\sPreserve\)\n\s+\{ replaceall_matched
begin
            Field (EC81, ByteAcc, Lock, Preserve)\n
            {\n
                Offset (0xD0), \n
                FC00,   8, \n
                FC01,   8, \n
                FG00,   8, \n
                FG01,   8,
end;

into scope label _SB.PCI0.LPCB insert
begin
       Device (SMCD)\n
        {\n
            Name (_HID, EisaId ("PNP0C02"))\n
            Name (_CID, "MON00000")\n
            Method (WMIB, 3, Serialized)\n
            {\n
                ^^^^WMI.WMBB (Arg0, Arg1, Arg2)\n
            }\n

            Name (TACH, Package (0x06)\n
            {\n
                "CPU Fan", \n
                "FAN0", \n
                "GPU Fan #1", \n
                "FAN1"\n
            })
            Method (FAN0, 0, Serialized)\n
            {\n
                If (^^EC.ECOK)\n
                {\n
                    Store (B1B2 (^^EC.FC01, ^^EC.FC00), Local0)\n
                    If (LLessEqual (Local0, Zero))\n
                    {\n
                        Return (Zero)\n
                    }\n

                    Divide (0x0020E6BC, Local0, , Local0)\n
                    Return (Local0)\n
                }\n

                Return (Zero)\n
            }

            Method (FAN1, 0, Serialized)\n
            {\n
                If (^^EC.ECOK)\n
                {\n
                    Store (B1B2 (^^EC.FG01, ^^EC.FG00), Local0)\n
                    If (LLessEqual (Local0, Zero))\n
                    {\n
                        Return (Zero)\n
                    }\n

                    Divide (0x0020E6BC, Local0, , Local0)\n
                    Return (Local0)\n
                }\n

                Return (Zero)\n
            }\n
        }\n
end;

#audio layout-id 29
into method label _DSM parent_label HDEF remove_entry;
into device label HDEF insert
begin
Method (_DSM, 4, NotSerialized)\n
{\n
    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
    Return (Package()\n
    {\n
        "layout-id", Buffer() { 0x1D, 0x00, 0x00, 0x00 },\n
        "hda-gfx", Buffer() { "onboard-1" },\n
        "PinConfigurations", Buffer() { },\n
        //"MaximumBootBeepVolume", 77,\n
    })\n
}\n
end;

into method label _DSM parent_label HDAS remove_entry;
into device label HDAS insert
begin
Method (_DSM, 4, NotSerialized)\n
{\n
    If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
    Return (Package()\n
    {\n
        "layout-id", Buffer() { 0x1D, 0x00, 0x00, 0x00 },\n
        "hda-gfx", Buffer() { "onboard-1" },\n
        "PinConfigurations", Buffer() { },\n
        //"MaximumBootBeepVolume", 77,\n
    })\n
}\n
end;











#Maintained by: RehabMan for: Laptop Patches
#system_IRQ.txt

# This can fix non-working audio and also has an affect on HPET.
#
# Use this if you have issues with patched AppleHDA (required on almost all laptops)
# or if you have issues with HPET (restart after wake).

# IRQ fix
into device name_hid PNP0000 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0100 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0B00 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0103 code_regex IRQNoFlags\s\(\)\n\s+\{.*\} removeall_matched;
into device name_hid PNP0103 code_regex Name\s\(([^,]+),\sResourceTemplate\s\(\).*\n\s+\{((?:.|\n)*)\}\) replace_matched
begin
Name (%1, ResourceTemplate()\n
{\n
    IRQNoFlags() { 0, 8, 11, 15 }\n
%2
})\n
end;
#Maintained by: RehabMan for: Laptop Patches
#system_WAK2.txt

#
# In 10.8.5 and perhaps later versions of OS X, DSDT method _WAK
# called after resuming from S3 suspend (Sleep, or suspend to RAM),
# is called with garbage in Arg0, where it should be a value 
# representing the sleep state being left (1-5).
#
# This causes problems for code in DSDT _WAK method which expects
# and checks against Arg0==3 for wake from sleep to turn on various
# devices or restore internal state to a working state.
#
# This patch adds code at the very beginning of the method to
# force an an out-of-range Arg0 to 3.
#
# See system_WAK1.txt for an alternate patch
#
# Note regarding Yosemite:
#  At least in Yosemite 10.10.2, this bug appears to be fixed.
#  I didn't notice/verify on other versions of Yosemite
#

into method label _WAK code_regex ([\s\S]*) replace_matched
begin
If (LOr(LLess(Arg0,1),LGreater(Arg0,5))) { Store(3,Arg0) }\n
%1
end;

into method label \_WAK code_regex ([\s\S]*) replace_matched
begin
If (LOr(LLess(Arg0,1),LGreater(Arg0,5))) { Store(3,Arg0) }\n
%1
end;

#Maintained by: RehabMan for: Laptop Patches
#system_HPET.txt

# If you have panic "No HPETs available..." or have a abrubt restart
# after waking from sleep, you may need this patch.
# The patch makes sure the HPET device is always available.

# HPET fix to avoid AppleIntelCPUPowerManagement panic
into method label _STA parent_hid PNP0103 remove_entry;
into device name_hid PNP0103 code_regex Name\s\(_STA\,\s+0x0F\) remove_matched;
into device name_hid PNP0103 insert
begin
Name (_STA, 0x0F)\n
end;

into method label _CRS parent_hid PNP0103 remove_entry;
into device name_hid PNP0103 insert
begin
Method (_CRS, 0, NotSerialized)\n
{\n
    Return (BUF0)\n
}\n
end;
#Maintained by: RehabMan for: Laptop Patches
#system_Shutdown2.txt

#  Shutdown fix v2
into method label _PTS code_regex ([\s\S]*) replace_matched
begin
If (LNotEqual(Arg0,5)) {\n
%1\n
}\n
end;


